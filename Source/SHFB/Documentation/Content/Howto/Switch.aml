<?xml version="1.0" encoding="utf-8"?>
<topic id="fb014e2d-05c2-4da2-9ed3-0032564a7ae0" revisionNumber="1">
  <developerWalkthroughDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>Remote Hub can use streams as the medium to connect clients.</para>
    </introduction>

    <section>
      <title>Use streams</title>
      <content>
        <para>Stream Adapter is the adapter designed by using streams as the medium to connect another instance of Stream Adapter.</para>
        <para>Unlike Redis Adapter, due to streams have only 2 ends, instances of Stream Adapter work in pairs. Two instances of Stream Adapter connected by the same streams transport messages between them.</para>
        <para>While constructing an instance of Stream Adapter, 2 streams are required, one for reading and another for writing. If the stream supports two way communicating, like NetworkStream, it can be used by passing the same stream twice for input stream and the output one.</para>
        <para>The streams prepared for Stream Adapter should allow block reading. Stream Adapter uses BinaryReader to read data from the input stream.</para>
        <para>When the stream for input is closed, the Stream Adapter will detect the state change, stop working and raise the <codeEntityReference qualifyHint="false">E:SecretNest.RemoteHub.StreamAdapter.ConnectionErrorOccurred</codeEntityReference>. Also, other code can monitor the streams used and stop the adapter when necessary.</para>
      </content>
    </section>

    <section>
      <title>Use Stream Clients in pairs</title>
      <content>
        <para><mediaLink><image placement="center" xlink:href="Stream"/></mediaLink></para>
        <para>In the solution above, 2 Stream clients are connected by the same streams. They can transport messages between them.</para>
      </content>
    </section>

    <section>
      <title>Connect multiple Stream Clients using Switch</title>
      <content>
        <para>When more than 2 clients need to be connected together, instances of Switch should be placed for routing messages.</para>
        <para>While using Switch, adapters handle the communication over mediums should be attached to it. For example, while using streams, one side of the streams is connected to the Stream Client for operating in the user code block, as well as the other side should be connected to a Stream Adapter which will be attached to the switch.</para>
        <para><mediaLink><image placement="center" xlink:href="Switch"/></mediaLink></para>
        <para>In the solution above, 3 Stream clients are connected to the same switch. They can transport messages among them.</para>
      </content>
    </section>

    <section>
      <title>Switch networking</title>
      <content>
        <para>Switches can be cascaded. Using a pair of Stream Adapter and the streams as the medium, two switches can be combined.</para>
        <para>By attaching an instance of Redis Adapter, all clients connected to the target Redis database will also be found and reachable in the switch networking.</para>
        <para><mediaLink><image placement="center" xlink:href="Networking"/></mediaLink></para>
        <para>In the solution above, 2 Redis clients, 3 Stream clients and the Switch Direct client are connected to the same network. Then can transport messages among them.</para>
        <para>Switch Direct client is a special client which can be attached to switch directly and expose the client side methods and events for user code block. See <link xlink:href="0241d550-bee5-4690-b22b-3399ba7a7bf1" /> for details.</para>
      </content>
    </section>

    <section>
      <title>Security</title>
      <content>
        <para>Due to no data encrypting or authentication is handled by Remote Hub, while using streams in an open area, like Internet, user need to take care about network security.</para>
        <para>Using SslStream over underlying network stream is an easy and recommended way for encrypting. For authenticating, the certificate of SslStream will help a lot. Also, adding an authenticating phase before passing the stream to Stream Adapters is an acceptable solution too.</para>
      </content>
    </section>

    <relatedTopics>
      <link xlink:href="7b9f6faa-8de5-4097-bad0-76e9295ccce0" /> <!--IRemoteHubRedis-->
      <link xlink:href="faeafdf3-1c3a-4aa6-a045-24e0df018aa6" /> <!--RedisAdapter-->
      <link xlink:href="40f09325-9850-497d-afb6-0b8b90d8360a" /> <!--RedisClient-->
      <link xlink:href="a635f111-aa6b-4609-bec8-d954ac988f47" /> <!--StreamAdapter-->
      <link xlink:href="91b09d21-87ae-4bc8-9efe-4f446b05cd3e" /> <!--StreamClient-->
      <link xlink:href="754f0327-c190-40b4-b091-93e104cc78be" /> <!--Switch-->
      <link xlink:href="0241d550-bee5-4690-b22b-3399ba7a7bf1" /> <!--SwitchDirect-->
      <link xlink:href="e84b359f-4609-429c-8b3f-d040a75ceae6" /> <!--HowToRedis-->
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>
