<?xml version="1.0" encoding="utf-8"?>
<topic id="a635f111-aa6b-4609-bec8-d954ac988f47" revisionNumber="1">
  <developerWalkthroughDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>Redis Adapter, SecretNest.RemoteHub.RedisAdapter, is a library contains adapter of Remote Hub based on Redis database.</para>
    </introduction>

    <section>
      <title>Use this library</title>
      <content>
        <para>This library defines the adapter works in pairs connected by streams, named as <codeEntityReference qualifyHint="false">T:SecretNest.RemoteHub.StreamAdapter`1</codeEntityReference>, which implemented <codeEntityReference qualifyHint="false">T:SecretNest.RemoteHub.IRemoteHubStreamAdapter</codeEntityReference> and <codeEntityReference qualifyHint="false">T:SecretNest.RemoteHub.IRemoteHubAdapter`1</codeEntityReference>.</para>
        <para>Creating an instance of this adapter and attaching it to one switch will link the other adapter which connected to the same streams to the switch. This will allow all clients from the other side and the switch to discover each others and transport message among them.</para>
        <para>Stream Client, SecretNest.RemoteHub.Stream, will contains an instance of this adapter. But the adapter is constructed and controlled by client. It's not necessary for user to create the instance of adapter for the client.</para>
      </content>
    </section>

    <section>
      <title>Type parameter</title>
      <content>
        <para>Type parameter of Stream Adapter is used for sending and receiving user messages.</para>
        <para>Currently, only byte array (byte[] in C#.Net / Byte() in VB.Net) and string are acceptable. Passing other type while creating while cause an exception thrown.</para>
        <para>Due to transportation on streams is based on byte array, when string is chosen while constructing adapter, an encoder could be provided. If not, Encoding.Default will be used.</para>
        <para>Using different type parameters or encoders on the both sides of the adapters created on the same streams is acceptable. For example, if one side is set as string with Encoding.Default and another is using byte array, the text sent from the 1st one will be received by the 2nd as the encoded output of Encoding.Default.</para>
        <para>The type only apply on the user messages. System messages, like those for client discovering, will not be affected.</para>
      </content>
    </section>

    <section>
      <title>Callback</title>
      <content>
        <para>One or more instance of <codeEntityReference qualifyHint="false">T:SecretNest.RemoteHub.OnMessageReceivedCallback`1</codeEntityReference> need to be prepared for receiving user messages. Type of the delegate is the same as the type parameter passed into the Stream Adapter.</para>
        <para>The callback instance can to be passed as an argument of the constructor of Stream Adapter, or set it as null for leaving it not initialized.</para>
        <para>Use method <codeEntityReference qualifyHint="false" autoUpgrade="true">M:SecretNest.RemoteHub.IRemoteHubAdapter`1.AddOnMessageReceivedCallback(SecretNest.RemoteHub.OnMessageReceivedCallback{`0})</codeEntityReference> and <codeEntityReference qualifyHint="false" autoUpgrade="true">M:SecretNest.RemoteHub.IRemoteHubAdapter`1.RemoveOnMessageReceivedCallback(SecretNest.RemoteHub.OnMessageReceivedCallback{`0})</codeEntityReference> to add or remove the callback instance after the adapter constructed.</para>
      </content>
    </section>
    
    <section>
      <title>Adapter</title>
      <content>
        <para>Adapter is a component for Remote Hub which handle the communication on the particular medium.</para>
        <para>Adapter instance will: </para>
        <list class="bullet">
          <listItem>
            <para>Announce the local client to the medium;</para>
          </listItem>
          <listItem>
            <para>Listen to the changes of the remote clients from the medium;</para>
          </listItem>
          <listItem>
            <para>Send message to the medium;</para>
          </listItem>
          <listItem>
            <para>Receive message, which the target is one of the registered local clients, from the medium; and,</para>
          </listItem>
          <listItem>
            <para>Maintain virtual host table.</para>
          </listItem>
        </list>
        <para>As Stream Adapter, the medium is a pair of streams, one for input and another for output, or one stream that support duplex communication. Stream Adapter works in pair by using the streams, sending messages from one side to another.</para>
      </content>
    </section>

    <relatedTopics>
      <link xlink:href="3d44d1cd-5d0c-4c89-bedd-49830a60baec" /> <!--IRemoteHub-->
      <link xlink:href="ed44485b-adff-46f1-9be9-d5731e1d4ff4" /> <!--IRemoteHubStream-->
      <link xlink:href="fb014e2d-05c2-4da2-9ed3-0032564a7ae0" /> <!--HowToSwitch-->
      <link xlink:href="91b09d21-87ae-4bc8-9efe-4f446b05cd3e" /> <!--StreamClient-->
      <link xlink:href="754f0327-c190-40b4-b091-93e104cc78be" /> <!--Switch-->
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>
