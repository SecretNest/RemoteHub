<?xml version="1.0" encoding="utf-8"?>
<topic id="91b09d21-87ae-4bc8-9efe-4f446b05cd3e" revisionNumber="1">
  <developerWalkthroughDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>Stream Client, SecretNest.RemoteHub.Stream, is a library contains the Remote Hub client based on streams.</para>
    </introduction>

    <section>
      <title>Use this library</title>
      <content>
        <para>This library defines the Remote Hub client works in pairs connected by streams, named as <codeEntityReference qualifyHint="false">T:SecretNest.RemoteHub.RemoteHubStream`1</codeEntityReference>, which implemented <codeEntityReference qualifyHint="false">T:SecretNest.RemoteHub.IRemoteHubOverStream</codeEntityReference> and <codeEntityReference qualifyHint="false">T:SecretNest.RemoteHub.IRemoteHub`1</codeEntityReference>.</para>
        <para>In this client, a Stream Adapter will be created to handle the operations on streams.</para>
      </content>
    </section>

    <section>
      <title>Type parameter</title>
      <content>
        <para>Type parameter of Stream Client will be passed to Stream Adapter for sending and receiving user messages.</para>
        <para>Currently, only byte array (byte[] in C#.Net / Byte() in VB.Net) and string are acceptable. Passing other type while creating while cause an exception thrown.</para>
        <para>Due to transportation on streams is based on byte array, when string is chosen while constructing adapter, an encoder could be provided. If not, Encoding.Default will be used.</para>
        <para>Using different type parameters or encoders on the both sides of the clients created on the same streams is acceptable. For example, if one side is set as string with Encoding.Default and another is using byte array, the text sent from the 1st one will be received by the 2nd as the encoded output of Encoding.Default.</para>
        <para>The type only apply on the user messages. System messages, like those for client discovering, will not be affected.</para>
      </content>
    </section>

    <section>
      <title>Callback</title>
      <content>
        <para>A instance of <codeEntityReference qualifyHint="false">T:SecretNest.RemoteHub.OnMessageReceivedCallback`1</codeEntityReference> need to be prepared for receiving user messages. Type of the delegate is the same as the type parameter passed into the Stream Client.</para>
        <para>The callback instance need to be passed as an argument of the constructor of Stream Client.</para>
      </content>
    </section>

    <relatedTopics>
      <link xlink:href="3d44d1cd-5d0c-4c89-bedd-49830a60baec" /> <!--IRemoteHub-->
      <link xlink:href="ed44485b-adff-46f1-9be9-d5731e1d4ff4" /> <!--IRemoteHubStream-->
      <link xlink:href="fb014e2d-05c2-4da2-9ed3-0032564a7ae0" /> <!--HowToSwitch-->
      <link xlink:href="a635f111-aa6b-4609-bec8-d954ac988f47" /> <!--StreamAdapter-->
    </relatedTopics>
  </developerWalkthroughDocument>
</topic>
