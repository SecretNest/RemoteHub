<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SecretNest.RemoteHub.RedisAdapter</name>
    </assembly>
    <members>
        <member name="T:SecretNest.RemoteHub.RedisAdapter">
            <summary>
            Represents the base, non-generic version of the generic <see cref="T:SecretNest.RemoteHub.RedisAdapter`1"/>, which converts RemoteHub commands and events to Redis database.
            </summary>
        </member>
        <member name="E:SecretNest.RemoteHub.RedisAdapter.ConnectionErrorOccurred">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.RedisAdapter.RemoteClientUpdated">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.RedisAdapter.RemoteClientRemoved">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.RedisAdapter.AdapterStarted">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.RedisAdapter.AdapterStopped">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by this instance.
            </summary>
            <param name="disposing">True: release both managed and unmanaged resources; False: release only unmanaged resources.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.Dispose">
            <summary>
            Releases all resources used by this instance.
            </summary>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes an instance of RedisAdapter.
            </summary>
            <param name="redisConfiguration">The string configuration to use for Redis multiplexer.</param>
            <param name="mainChannelName">Main channel name.</param>
            <param name="privateChannelNamePrefix">Prefix in naming of the private channel.</param>
            <param name="redisDb">The id to get a database for. Used in getting Redis database.</param>
            <param name="clientTimeToLive">Time to live (TTL) value of the host in seconds. Any records of hosts expired will be removed.</param>
            <param name="clientRefreshingInterval">Interval between refresh command sending operations in seconds.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.Start">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.Stop">
            <inheritdoc/>
        </member>
        <member name="P:SecretNest.RemoteHub.RedisAdapter.IsStarted">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.OnPrivateMessageReceived(System.Guid,StackExchange.Redis.RedisValue)">
            <summary>
            Will be called when a private message is received from the redis channel.
            </summary>
            <param name="targetClientId">Client id of the receiver.</param>
            <param name="value">Data of the message.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.SendPrivateMessageAsync(StackExchange.Redis.RedisChannel,StackExchange.Redis.RedisValue)">
            <summary>
            Sends the private message.
            </summary>
            <param name="channel">Channel of the receiver.</param>
            <param name="value">Data of the message.</param>
            <returns>A task that represents the sending job.</returns>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.SendPrivateMessageAsync(System.Guid,StackExchange.Redis.RedisValue)">
            <summary>
            Sends the private message.
            </summary>
            <param name="targetClientId">Client id of the receiver.</param>
            <param name="value">Data of the message.</param>
            <returns>A task that represents the sending job.</returns>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.SendPrivateMessage(StackExchange.Redis.RedisChannel,StackExchange.Redis.RedisValue)">
            <summary>
            Sends the private message.
            </summary>
            <param name="channel">Channel of the receiver.</param>
            <param name="value">Data of the message.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.SendPrivateMessage(System.Guid,StackExchange.Redis.RedisValue)">
            <summary>
            Sends the private message.
            </summary>
            <param name="targetClientId">Client id of the receiver.</param>
            <param name="value">Data of the message.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.IsSelf(System.Guid)">
            <summary>
            Gets whether the client specified is registered as local.
            </summary>
            <param name="clientId">Client to be checked.</param>
            <returns>Whether the client is registered as local.</returns>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.IsSelf(StackExchange.Redis.RedisChannel,System.Guid@)">
            <summary>
            Gets whether the client specified by redis channel is registered as local. Output the client id if it is.
            </summary>
            <param name="redisChannel">Redis channel of the client to be checked.</param>
            <param name="clientId">The client id if it is the local. This is an out parameter.</param>
            <returns>Whether the client is registered as local.</returns>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.AddClientAsync(System.Guid[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.AddClient(System.Guid[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.RemoveClientAsync(System.Guid[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.RemoveClient(System.Guid[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.RemoveAllClientsAsync">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.RemoveAllClients">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.GetAllClients">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.GetAllRemoteClients">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.ApplyVirtualHosts(System.Guid,System.Collections.Generic.KeyValuePair{System.Guid,SecretNest.RemoteHub.VirtualHostSetting}[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.TryResolve(System.Guid,StackExchange.Redis.RedisChannel@)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter.TryResolveVirtualHost(System.Guid,System.Guid@)">
            <inheritdoc/>
        </member>
        <member name="T:SecretNest.RemoteHub.RedisAdapter`1">
            <summary>
            Converts RemoteHub commands and events to Redis database.
            </summary>
            <typeparam name="T">Type of the message data. Only string and byte array (byte[]) are supported.</typeparam>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter`1.#ctor(System.String,SecretNest.RemoteHub.OnMessageReceivedCallback{`0},System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes an instance of RedisAdapter.
            </summary>
            <param name="redisConfiguration">The string configuration to use for Redis multiplexer.</param>
            <param name="onMessageReceivedCallback">The callback to be used for dealing received private message. Default value is null.</param>
            <param name="mainChannelName">Main channel name. Default value is "RemoteHub".</param>
            <param name="privateChannelNamePrefix">Prefix in naming of the private channel. Default value is "RemoteHubPrivate_".</param>
            <param name="redisDb">The id to get a database for. Used in getting Redis database. Default value is 0.</param>
            <param name="clientTimeToLive">Time to live (TTL) value of the host in seconds. Any records of hosts expired will be removed. Default value is 30 seconds.</param>
            <param name="clientRefreshingInterval">Interval between refresh command sending operations in seconds. Default value is 15 seconds.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter`1.AddOnMessageReceivedCallback(SecretNest.RemoteHub.OnMessageReceivedCallback{`0})">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter`1.RemoveOnMessageReceivedCallback(SecretNest.RemoteHub.OnMessageReceivedCallback{`0})">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter`1.RemoveAllOnMessageReceivedCallbacks">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter`1.SendPrivateMessageAsync(StackExchange.Redis.RedisChannel,`0)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter`1.SendPrivateMessage(StackExchange.Redis.RedisChannel,`0)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter`1.SendPrivateMessageAsync(System.Guid,`0)">
            <summary>
            Sends private message to a client specified by id.
            </summary>
            <param name="clientId">Client id.</param>
            <param name="message">Message to be sent.</param>
            <returns>A task that represents the sending job.</returns>
            <remarks>Redis Adapter will always return true because it won't check whether the target specified by id exists or not.</remarks>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter`1.SendPrivateMessage(System.Guid,`0)">
            <summary>
            Sends private message to a client specified by id.
            </summary>
            <param name="clientId">Client id.</param>
            <param name="message">Message to be sent.</param>
            <remarks>Redis Adapter will always return true because it won't check whether the target specified by id exists or not.</remarks>
        </member>
        <member name="M:SecretNest.RemoteHub.RedisAdapter`1.OnPrivateMessageReceived(System.Guid,StackExchange.Redis.RedisValue)">
            <inheritdoc/>
        </member>
    </members>
</doc>
