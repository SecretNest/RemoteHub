<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SecretNest.RemoteHub.SwitchDirect</name>
    </assembly>
    <members>
        <member name="T:SecretNest.RemoteHub.RemoteHubSwitchDirect`1">
            <summary>
            Handles the host state and message transportation.
            </summary>
            <typeparam name="T">Type of the message data. Only string and byte array (byte[]) are supported.</typeparam>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.#ctor(System.Guid,SecretNest.RemoteHub.OnMessageReceivedCallback{`0},System.Text.Encoding)">
            <summary>
            Initializes an instance of RemoteHubSwitchDirect.
            </summary>
            <param name="clientId">Client id of the local RemoteHub.</param>
            <param name="onMessageReceivedCallback">The callback to be used for dealing received private message.</param>
            <param name="encoding">The encoder for converting between string and byte array. Default value is Encoding.Default. Will be ignored if type is not string.</param>
        </member>
        <member name="P:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.ClientId">
            <inheritdoc/>
        </member>
        <member name="P:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.IsStarted">
            <summary>
            Gets whether this instance is started or not.
            </summary>
            <remarks>The state of this instance is shared with adapter. The state of the adapter linked will always be the same as the state of this instance.</remarks>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.ConnectionErrorOccurred">
            <summary>
            Occurs while an connection related exception is thrown.
            </summary>
            <remarks>This event will never be raised due to no breakable connection will be used in this class.</remarks>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.RemoteClientUpdated">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.RemoteClientRemoved">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.Started">
            <summary>
            Occurs when this instance started.
            </summary>
            <remarks>The state of this instance is shared with adapter. The state of the adapter linked will always be the same as the state of this instance. No matter the cause of the state changed to started, this event will be raised always.</remarks>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.Stopped">
            <summary>
            Occurs when this instance stopped. Also will be raised if the instance is stopped by the request from underlying object and remote site.
            </summary>
            <remarks>The state of this instance is shared with adapter. The state of the adapter linked will always be the same as the state of this instance. No matter the cause of the state changed to stopped, this event will be raised always.</remarks>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.SendMessage(System.Guid,`0)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.SendMessageAsync(System.Guid,`0)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.ApplyVirtualHosts(System.Collections.Generic.KeyValuePair{System.Guid,SecretNest.RemoteHub.VirtualHostSetting}[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.TryResolveVirtualHost(System.Guid,System.Guid@)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.TryGetVirtualHosts(System.Guid,System.Collections.Generic.KeyValuePair{System.Guid,SecretNest.RemoteHub.VirtualHostSetting}[]@)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.Start">
            <summary>
            Starts instance operating.
            </summary>
            <remarks>The state of this instance is shared with adapter. The state of the adapter linked will always be the same as the state of this instance. Calling this method will set the state of adapter to started also.</remarks>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.Stop">
            <summary>
            Stops instance operating.
            </summary>
            <remarks>The state of this instance is shared with adapter. The state of the adapter linked will always be the same as the state of this instance. Calling this method will set the state of adapter to stopped also.</remarks>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.ApplyVirtualHosts(System.Guid,System.Collections.Generic.KeyValuePair{System.Guid,SecretNest.RemoteHub.VirtualHostSetting}[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by this instance.
            </summary>
            <param name="disposing">True: release both managed and unmanaged resources; False: release only unmanaged resources.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitchDirect`1.Dispose">
            <summary>
            Releases all resources used by this instance.
            </summary>
        </member>
    </members>
</doc>
