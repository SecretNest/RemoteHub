<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SecretNest.RemoteHub.Switch</name>
    </assembly>
    <members>
        <member name="T:SecretNest.RemoteHub.AdapterEventArgs">
            <summary>
            Represents an argument contains the related RemoteHub Adapter instance.
            </summary>
        </member>
        <member name="P:SecretNest.RemoteHub.AdapterEventArgs.Adapter">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.AdapterEventArgs.#ctor(SecretNest.RemoteHub.IRemoteHubAdapter{System.Byte[]})">
            <summary>
            Initializes an instance of AdapterEventArgs.
            </summary>
            <param name="remoteHubAdapter">Related RemoteHub Adapter instance.</param>
        </member>
        <member name="T:SecretNest.RemoteHub.RemoteClientChangedEventArgs">
            <summary>
            Represents an argument for <see cref="E:SecretNest.RemoteHub.RemoteHubSwitch.RemoteClientAdded"/> and <see cref="E:SecretNest.RemoteHub.RemoteHubSwitch.RemoteClientRemoved"/>.
            </summary>
        </member>
        <member name="P:SecretNest.RemoteHub.RemoteClientChangedEventArgs.Adapter">
            <inheritdoc/>
        </member>
        <member name="T:SecretNest.RemoteHub.ConnectionExceptionWithAdapterEventArgs">
            <summary>
            Contains the exception occurred while accessing underlying object, and the RemoteHub Adapter instance which throw the exception.
            </summary>
        </member>
        <member name="P:SecretNest.RemoteHub.ConnectionExceptionWithAdapterEventArgs.Adapter">
            <summary>
            Gets the RemoteHub Adapter instance which throw the exception.
            </summary>
        </member>
        <member name="M:SecretNest.RemoteHub.ConnectionExceptionWithAdapterEventArgs.#ctor(SecretNest.RemoteHub.ConnectionExceptionEventArgs,SecretNest.RemoteHub.IRemoteHubAdapter{System.Byte[]})">
            <summary>
            Initializes an instance of ConnectionExceptionWithAdapterEventArgs.
            </summary>
            <param name="e">The argument passed by <see cref="E:SecretNest.RemoteHub.IRemoteHubAdapter.ConnectionErrorOccurred"/>.</param>
            <param name="remoteHubAdapter">RemoteHub Adapter instance which throw the exception.</param>
        </member>
        <member name="T:SecretNest.RemoteHub.IGetRelatedRemoteHubAdapterInstance">
            <summary>
            Represents an object which contains a property to get the related RemoteHub Adapter instance.
            </summary>
        </member>
        <member name="P:SecretNest.RemoteHub.IGetRelatedRemoteHubAdapterInstance.Adapter">
            <summary>
            Gets the related RemoteHub Adapter instance.
            </summary>
        </member>
        <member name="T:SecretNest.RemoteHub.MessageRoutedEventArgs">
            <summary>
            Represents an argument for <see cref="E:SecretNest.RemoteHub.RemoteHubSwitch.MessageRouted"/>.
            </summary>
        </member>
        <member name="P:SecretNest.RemoteHub.MessageRoutedEventArgs.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="P:SecretNest.RemoteHub.MessageRoutedEventArgs.Adapter">
            <inheritdoc/>
        </member>
        <member name="T:SecretNest.RemoteHub.MessageRoutingFailedEventArgs">
            <summary>
            Represents an argument for <see cref="E:SecretNest.RemoteHub.RemoteHubSwitch.MessageRoutingFailed"/>.
            </summary>
        </member>
        <member name="P:SecretNest.RemoteHub.MessageRoutingFailedEventArgs.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="T:SecretNest.RemoteHub.RemoteHubSwitch">
            <summary>
            Connects RemoteHub Adapters by using data switching to receive, process and forward data to the destination client.
            </summary>
            <remarks><para>Only <see cref="T:SecretNest.RemoteHub.IRemoteHubAdapter`1"/> of byte array (byte[]) is supported as adapter.</para>
            <para>Though only byte array is only the acceptable type parameter of adapter, all adapter which encoded private messages as byte array could be supported due to no private message will be decoded in RemoteHub Switch.</para>
            <para>For example, a stream, which is connected to a instance of <see cref="T:SecretNest.RemoteHub.IRemoteHubAdapter`1"/> of string in another endpoint, can be handled by a instance of <see cref="T:SecretNest.RemoteHub.IRemoteHubAdapter`1"/> of byte array (byte[]) for linked to this RemoteHub Switch instance. </para></remarks>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitch.AdapterAdded">
            <summary>
            Occurs while an adapter is added.
            </summary>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitch.AdapterRemoved">
            <summary>
            Occurs while an adapter is removed.
            </summary>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitch.RemoteClientAdded">
            <summary>
            Occurs while a remote client is added.
            </summary>
            <remarks>For avoiding client status mismatched, introduced by adding and removing the same client within a tiny timespan, this event should be processed synchronously only.</remarks>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitch.RemoteClientChanged">
            <summary>
            Occurs while a remote client is reattached to another adapter.
            </summary>
            <remarks>For avoiding client status mismatched, introduced by adding and removing the same client within a tiny timespan, this event should be processed synchronously only.</remarks>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitch.RemoteClientRemoved">
            <summary>
            Occurs while a remote client is removed.
            </summary>
            <remarks>For avoiding client status mismatched, introduced by adding and removing the same client within a tiny timespan, this event should be processed synchronously only.</remarks>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitch.ConnectionErrorOccurred">
            <summary>
            Occurs while an connection related exception is thrown.
            </summary>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitch.AdapterStarted">
            <summary>
            Occurs when an adapter started.
            </summary>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitch.AdapterStopped">
            <summary>
            Occurs when an adapter stopped. Also will be raised if the adapter is stopped by the request from underlying object and remote site.
            </summary>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitch.GetAllRemoteClients">
            <summary>
            Gets all remote clients.
            </summary>
            <returns>Ids of all found remote clients.</returns>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitch.GetAllAdapters">
            <summary>
            Gets all attached adapters.
            </summary>
            <returns>All attached adapters.</returns>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitch.GetActiveRemoteClientsOfAdapter(SecretNest.RemoteHub.IRemoteHubAdapter{System.Byte[]})">
            <summary>
            Gets all remote clients registered with the adapter and being used, not replaced by other adapters, in this RemoteHub Switch instance.
            </summary>
            <param name="adapter">The adapter for being querying.</param>
            <returns>Ids of the remote clients registered with the adapter specified and being used, not replaced by other adapters, in this RemoteHub Switch instance. <see langword="null"/> will be returned if the adapter specified is not registered with this RemoteHub Switch instance.</returns>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitch.AddAdapter(SecretNest.RemoteHub.IRemoteHubAdapter{System.Byte[]})">
            <summary>
            Attaches an adapter to this switch. Starts the adapter if the switch is started.
            </summary>
            <param name="adapter">Adapter to be attached.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitch.AddAdapters(SecretNest.RemoteHub.IRemoteHubAdapter{System.Byte[]}[])">
            <summary>
            Attaches multiple adapters to this switch. Starts the adapters if the switch is started.
            </summary>
            <param name="adapters">Adapters to be attached.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitch.RemoveAdapter(SecretNest.RemoteHub.IRemoteHubAdapter{System.Byte[]},System.Boolean)">
            <summary>
            Removes an adapter from this switch.
            </summary>
            <param name="adapter">Adapter to be removed.</param>
            <param name="stopAdapter">Whether the adapter should be stopped after removal. Default value is <see langword="false"/>.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitch.RemoveAdapter(System.Collections.Generic.IEnumerable{SecretNest.RemoteHub.IRemoteHubAdapter{System.Byte[]}},System.Boolean)">
            <summary>
            Removes adapters from this switch.
            </summary>
            <param name="adapters">Adapters to be removed.</param>
            <param name="stopAdapter">Whether the adapters should be stopped after removal. Default value is <see langword="false"/>.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitch.RemoveAdapters(System.Boolean,SecretNest.RemoteHub.IRemoteHubAdapter{System.Byte[]}[])">
            <summary>
            Removes adapters from this switch.
            </summary>
            <param name="stopAdapter">Whether the adapters should be stopped after removal.</param>
            <param name="adapters">Adapters to be removed.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubSwitch.RemoveAllAdapters(System.Boolean)">
            <summary>
            Removes all adapters from this switch.
            </summary>
            <param name="stopAdapter">Whether the adapters should be stopped after removal. Default value is <see langword="false"/>.</param>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitch.MessageRouted">
            <summary>
            Occurs when a message is routed.
            </summary>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubSwitch.MessageRoutingFailed">
            <summary>
            Occurs when a message is received but no adapter is registered with the client id specified by the message.
            </summary>
        </member>
    </members>
</doc>
