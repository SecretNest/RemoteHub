<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SecretNest.RemoteHub.Stream</name>
    </assembly>
    <members>
        <member name="T:SecretNest.RemoteHub.RemoteHubOverStream`1">
            <summary>
            Handles the host state and message transportation.
            </summary>
            <typeparam name="T">Type of the message data. Only string and byte array (byte[]) are supported.</typeparam>
        </member>
        <member name="P:SecretNest.RemoteHub.RemoteHubOverStream`1.ClientId">
            <inheritdoc/>
        </member>
        <member name="P:SecretNest.RemoteHub.RemoteHubOverStream`1.IsStarted">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubOverStream`1.RemoteClientUpdated">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubOverStream`1.RemoteClientRemoved">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubOverStream`1.ConnectionErrorOccurred">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubOverStream`1.Started">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.RemoteHubOverStream`1.Stopped">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubOverStream`1.#ctor(System.Guid,System.IO.Stream,System.IO.Stream,SecretNest.RemoteHub.OnMessageReceivedCallback{`0},System.Int32,System.Text.Encoding)">
            <summary>
            Initializes an instance of RemoteHubOverStream.
            </summary>
            <param name="clientId">Client id of the local RemoteHub.</param>
            <param name="inputStream">Stream for reading.</param>
            <param name="outputStream">Stream for writing.</param>
            <param name="onMessageReceivedCallback">The callback to be used for dealing received private message.</param>
            <param name="refreshingIntervalInSeconds">The interval in seconds before sending a data package for keeping it alive when streams are idle. Default value is 60 seconds.</param>
            <param name="encoding">The encoder for converting between string and byte array. Default value is Encoding.Default. Will be ignored if type is not string.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubOverStream`1.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by this instance.
            </summary>
            <param name="disposing">True: release both managed and unmanaged resources; False: release only unmanaged resources.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubOverStream`1.Dispose">
            <summary>
            Releases all resources used by this instance.
            </summary>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubOverStream`1.ChangeStream(System.IO.Stream,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubOverStream`1.ApplyVirtualHosts(System.Collections.Generic.KeyValuePair{System.Guid,SecretNest.RemoteHub.VirtualHostSetting}[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubOverStream`1.TryResolveVirtualHost(System.Guid,System.Guid@)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubOverStream`1.Start">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubOverStream`1.Stop">
            <summary>
            Stops the underlying object required operations. Streams will be closed also.
            </summary>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubOverStream`1.SendMessage(System.Guid,`0)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.RemoteHubOverStream`1.SendMessageAsync(System.Guid,`0)">
            <inheritdoc/>
        </member>
    </members>
</doc>
