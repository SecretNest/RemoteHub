<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SecretNest.RemoteHub.StreamAdapter</name>
    </assembly>
    <members>
        <member name="T:SecretNest.RemoteHub.StreamAdapter">
            <summary>
            Represents the base, non-generic version of the generic <see cref="T:SecretNest.RemoteHub.StreamAdapter`1"/>, which converts between RemoteHub commands and stream.
            </summary>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.OnPrivateMessageReceived(System.Guid,System.Byte[])">
            <summary>
            Will be called when a private message is received from the stream.
            </summary>
            <param name="targetClientId">Client id of the receiver.</param>
            <param name="dataPackage">Data package of the message.</param>
        </member>
        <member name="E:SecretNest.RemoteHub.StreamAdapter.ConnectionErrorOccurred">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.StreamAdapter.RemoteClientUpdated">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.StreamAdapter.RemoteClientRemoved">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.StreamAdapter.AdapterStarted">
            <inheritdoc/>
        </member>
        <member name="E:SecretNest.RemoteHub.StreamAdapter.AdapterStopped">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.#ctor(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Initializes an instance of StreamAdapter.
            </summary>
            <param name="inputStream">Stream for reading.</param>
            <param name="outputStream">Stream for writing.</param>
            <param name="refreshingIntervalInSeconds">The interval in seconds before sending a data package for keeping it alive when streams are idle.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by this instance.
            </summary>
            <param name="disposing">True: release both managed and unmanaged resources; False: release only unmanaged resources.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.Dispose">
            <summary>
            Releases all resources used by this instance.
            </summary>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.Start">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.Stop">
            <summary>
            Stops the underlying object required operations. Streams will be closed also.
            </summary>
        </member>
        <member name="P:SecretNest.RemoteHub.StreamAdapter.IsStarted">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.ChangeStream(System.IO.Stream,System.IO.Stream)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.SendingPrivateMessage(System.Guid,System.Byte[])">
            <summary>
            Sends the private message.
            </summary>
            <param name="targetClientId">Client id of the receiver.</param>
            <param name="data">Data package of the message.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.AddClientAsync(System.Guid[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.RemoveClientAsync(System.Guid[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.RemoveAllClientsAsync">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.AddClient(System.Guid[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.RemoveClient(System.Guid[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.RemoveAllClients">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.GetAllClients">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.GetAllRemoteClients">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.ApplyVirtualHosts(System.Guid,System.Collections.Generic.KeyValuePair{System.Guid,SecretNest.RemoteHub.VirtualHostSetting}[])">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.TryResolveVirtualHost(System.Guid,System.Guid@)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter.IsSelf(System.Guid)">
            <summary>
            Gets whether the client specified is registered as local.
            </summary>
            <param name="clientId">Client to check.</param>
            <returns>Whether the client is registered as local.</returns>
        </member>
        <member name="T:SecretNest.RemoteHub.StreamAdapter`1">
            <summary>
            Converts between RemoteHub commands and stream.
            </summary>
            <typeparam name="T">Type of the message data. Only string and byte array (byte[]) are supported.</typeparam>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter`1.#ctor(System.IO.Stream,System.IO.Stream,SecretNest.RemoteHub.OnMessageReceivedCallback{`0},System.Int32,System.Text.Encoding)">
            <summary>
            Initializes an instance of StreamAdapter.
            </summary>
            <param name="inputStream">Stream for reading.</param>
            <param name="outputStream">Stream for writing.</param>
            <param name="onMessageReceivedCallback">The callback to be used for dealing received private message. Default value is null.</param>
            <param name="refreshingIntervalInSeconds">The interval in seconds before sending a data package for keeping it alive when streams are idle. Default value is 60 seconds.</param>
            <param name="encoding">The encoder for converting between string and byte array. Default value is Encoding.Default. Will be ignored if type is not string.</param>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter`1.AddOnMessageReceivedCallback(SecretNest.RemoteHub.OnMessageReceivedCallback{`0})">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter`1.RemoveOnMessageReceivedCallback(SecretNest.RemoteHub.OnMessageReceivedCallback{`0})">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter`1.RemoveAllOnMessageReceivedCallbacks">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter`1.SendPrivateMessage(System.Guid,`0)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter`1.SendPrivateMessageAsync(System.Guid,`0)">
            <inheritdoc/>
        </member>
        <member name="M:SecretNest.RemoteHub.StreamAdapter`1.OnPrivateMessageReceived(System.Guid,System.Byte[])">
            <inheritdoc/>
        </member>
    </members>
</doc>
